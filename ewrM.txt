function TimeOclc(TimeAll, Time) {
  let t = String(Time[1])
  let times = Number(t.slice(0, 2)) * 60 + Number(t.slice(3, 5))
  for (let i = 0;i< TimeAll.length; i++){
    if (TimeAll[i][0] == Time[0]) {
      var indices = i
    }
  }
  let s = String(indices)
  let win1 = TimeAll[indices][0]
  let win2 = TimeAll[indices][1]
  if (win1 == 'выходной') {
    return false
  } else {
    let time1 = Number(win2.slice(0, 2)) * 60 + Number(win2.slice(3, 5))
    let time2 = Number(win2.slice(6, 8)) * 60 + Number(win2.slice(9, 11))
    if ((time1 <= times) && (times <= time2)) {
      return time2 - times
    } else {
      return false
    } 
  }   
}
function distance(a){ 
  var d=[] 
  for (let i=0; i < a.length;i++){
    d.push(a[i][3])
  }
  var Dict = new Array(a.length)
  for ( let j = 0; j < a.length; j++) {
       Dict[j]=new Array()
      for (z=0; z<a.length; z++){
        Dict[j][z]=0
      }
  }
  for (let k=0; k < Dict.length;k++){
    for (let t=0; t < Dict.length;t++){
      var r=d[t]
      var b=d[k]
      lj=(b[0]-r[0])*111.1
      let xz=(b[1]-r[1])*111.1
      let u=Math.sqrt(xz**2+lj**2)
      if (k!=t){
        Dict[k][t]=Math.round(u*1000)
        Dict[t][k]=Math.round(u*1000)
      }else{
        Dict[k][t]=0
      }
    }
  }
  return Dict 
}


fs=[[1, 'Фонтан Дружбы народов', 'Главный фонтан и один из основных символов ВДНХ. Шестнадцать женских статуй фонтана символизируют 16 Союзных республик.', '[55.829850009160864,37.631803808229506]', 'Круглосуточно','5', '', ''],
[2, 'Фонтан Каменный цветок', 'Один из трёх главных фонтанов ВДНХ. Изначальная идея показать дары природы каждой из республик не была реализована в полной мере — сделали лишь три композиции и после их «скопировали» на остальные постаменты.', '[55.832165532268945,37.62800592243877]', 'Круглосуточно','5', '', ''],
[3, 'Макет Москвы', 'Главная отличительная особенность макета столицы — поразительная детализация зданий и максимально точное воссоздание элементов ландшафтной архитектуры. Иногда проводятся мероприятия, подробности', '[55.834386404565635,37.630000043150154]', ['Пн: Выходной', 'Вт-Вс: 10:00 — 20:00'],'20', '', 'Бесплатно'],
[4, 'Москвариум', 'Центр океанографии и морской биологии, один из крупнейших океанариумов Европы, находится на территории ВДНХ. Иногда проводятся мероприятия, подробности', '[55.83293146791207,37.61881089569506]', ['Ежедневно: 10:00 — 21:00'],'60', '', 'Детский билет (от 3 до 12 лет): от 750 руб. Взрослый билет: от 1100 руб. Есть льготы'],
[5, 'Театр Сказок', 'Детский интерактивный Театр сказок — это уникальное мультимедийное пространство, где каждый зритель может взаимодействовать с персонажем и влиять на сюжет сказки. Шоу рассчитано на детей от трех до десяти лет, но вызовет интерес и у взрослых. Точное расписание сеансов, уточняйте', '[55.8292098608321,37.62809694813918]', ['Пн-Ср: Выходной','Чт-Пт: 14:00—17:00', 'Сб-Вс: 12:00—17:00'],'60', '', 'Стандартный билет: 600 руб.При оплате картой «Мир»: скидка 20%. Есть льготы']]
  var a=distance(fs)
	let s = 5
	let A = 1
	let B = 1
	let ji = 0.64 
	var d = []
	let Ages = 100
	let q = 8
	let ant=10
	let mnTrass = 1000000000000
	var bestT = []
	let TimeAll=[['Пн', '12:00-18:00'],['Вт','12:00-18:00'],['Ср', '10:00-19:00'],['Чт', '12:00-18:00'],['Пт', '14:00-21:00'],['Сб', 'выходной'],['Вс','выходной']]
	let Time=['Пн', '14:20']
	var mas = new Array(s);
	for (var i = 0; i < mas.length; i++) {
		mas[i] = new Array();
		for (j=0; j<s; j++){
			mas[i][j]=0.2;
		}
	}
	for (let fg=0; fg<Ages;fg++){
		var td = new Array(ant)
		for (var i = 0; i < ant; i++) {
			td[i]=new Array();
			for (j=0; j<s; j++){
				td[i][j]=0;
			}
		}
		for (let o=0; o<ant;o++){
			var kf=[]
			var antROUTE=[]
			let from_city=0
			antROUTE.push(from_city)
			var Zero = new Array(s)
			for (var i = 0; i < s; i++) {
				Zero[i]=new Array()
				for (j=0; j<s; j++){
					Zero[i][j]=0;
				}
			}
			for (let k=0; k<s;k++){
				let Sum = 0 
				for (let lfg=0; lfg<a[from_city].length;lfg++){
					if (antROUTE.indexOf(lfg)==-1){
						Sum=Sum+(a[from_city][lfg]**B*(mas[from_city][lfg])**A)
					}
				}
				kf.push(Sum)
				for (let j=0; j<a[from_city].length;j++){
					if (antROUTE.indexOf(j)==-1){
						let lk=a[from_city][j]**B*(mas[from_city][j])**A
						if (kf[k]!=0){
							Zero[from_city][j]=lk/kf[k]
						}else{
							Zero[from_city][j]=1
						}
					}
				}
				if (antROUTE.length!=5){
					let isNotChosen = true
                                        while (isNotChosen){
						var rand = Math.random()
						for (p=0;p<Zero[from_city].length;p++){
							if (Zero[from_city][p] >= rand){
								let indexi=0
								for (i=0;i<Zero[from_city].length;i++){
									if (Zero[from_city][p]==Zero[from_city][i]){
										indexi=i
									}
								}
								td[o][k+1]=indexi
								from_city=indexi
								antROUTE.push(from_city)
								isNotChosen = false
								break
							}
						}
					}
				}
			}
		}
		for (ih=0;ih<mas.length;ih++){
			for (jh=0;jh<mas[ih].length;jh++){
				mas[ih][jh]=mas[ih][jh]*ji
			}
		}
		for (i=0;i<(td.length-1);i++){
			let dsd=0
                        var Trass=[]
                        var TimeWR=[]
                        let TimeW=0
                        for (j=0;j<(td[i].length-1);j++){
				Trass.push(td[i][j])
                                if (td[i][j+1]==td[i][s-1]){
					Trass.push(td[i][j+1])
				}
				fr=td[i][j]
				fr1=td[i][j+1]
                                dsd=dsd+a[fr][fr1]
			}
                        let tic=dsd/50*60
                        TimeW=tic+30*s
                        TimeWR.push(TimeW)
                        let Sumr=0
                        for (yt=0; yt<TimeWR.lenght; yt++){
				Sumr=Sumr+TimeWR[yt]
			}
                        if  ((dsd<mnTrass) && (Sumr<=TimeOclc(TimeAll,Time))){
				mnTrass=dsd
				bestT=Trass             
			}
                        let L=q/dsd
                        for (klo=0;klo<(td[i].length);klo++){
				if (Sumr<=TimeOclc(TimeAll,Time)){
					mas[fr][fr1]=mas[fr][fr1]+L
                                        mas[fr1][fr]=mas[fr1][fr]+L
				}
			}
		}
	}
	console.log(mnTrass, bestT,TimeWR)
